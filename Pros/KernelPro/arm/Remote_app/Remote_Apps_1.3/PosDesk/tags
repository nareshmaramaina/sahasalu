!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
A_type	DevInfo.c	/^char A_type[32];$/;"	v
A_ver	DevInfo.c	/^char A_ver[10];$/;"	v
BACKLOG	include/header.h	23;"	d
Check_CmD	include/header.h	/^char Check_CmD[128];$/;"	v
DevInfo	DevInfo.c	/^int DevInfo(int flag)$/;"	f
Foreground_process	include/header.h	/^int Foreground_process;$/;"	v
Get_String_file	DevInfo.c	/^int Get_String_file(char *Path, char *Line)$/;"	f
LENGTH	include/header.h	24;"	d
MACID	DevInfo.c	/^char MACID[24];$/;"	v
Uid	DevInfo.c	/^char Uid[24];$/;"	v
Upload	upload.c	/^	int Upload(char *filename)$/;"	f
Upload_file	upload.c	/^int Upload_file(char *filename)$/;"	f
alarmHandler	alarm_handler.c	/^void alarmHandler(int signo)$/;"	f
bootloader_details	DevInfo.c	/^int bootloader_details(char *Bver)$/;"	f
check_cmd	check_cmd.c	/^int check_cmd(char *cmd_buff)$/;"	f
file_send_func	file_send.c	/^void file_send_func(int sockfd)$/;"	f
fs_name	include/header.h	26;"	d
get_Machineid	DevInfo.c	/^int get_Machineid(char *machineid)$/;"	f
get_Machineid	get_info.c	/^int get_Machineid(char *machineid)$/;"	f
get_app_details	DevInfo.c	/^int  get_app_details()$/;"	f
get_macid	DevInfo.c	/^int get_macid(char *macid)$/;"	f
get_macid	get_info.c	/^int get_macid(char *macid)$/;"	f
get_project_name	DevInfo.c	/^void get_project_name(char *name)$/;"	f
get_uid	DevInfo.c	/^void get_uid(char *uid)$/;"	f
kernel_details	DevInfo.c	/^int kernel_details(char *kernelver)$/;"	f
machineid	DevInfo.c	/^char machineid[12];$/;"	v
main	main.c	/^int main(int argc, char *argv[])$/;"	f
patch_ver	DevInfo.c	/^int patch_ver(char *version)$/;"	f
rootfs_details	DevInfo.c	/^int rootfs_details(char *rootfsver)$/;"	f
size_of_file	get_file_size.c	/^int size_of_file(const char *file)$/;"	f
sockfd	include/header.h	/^int sockfd; $/;"	v
wait_for_data	wait_for_data.c	/^int wait_for_data(int sockfd,int timeout)$/;"	f
